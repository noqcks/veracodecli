#!/usr/bin/env ruby

require 'commander'
require 'veracodecli'
include VeracodeApiResults
include VeracodeApiScan
include VeracodeApiBase
include VeracodeApiMacros

Commander.configure do
  program :name, 'veracodecli'
  program :version, '0.1.2'
  program :description, 'CLI for automating veracode api requests'
  program :help, 'Author', 'Isaiah Thiessen <isaiah.thiessen@telus.com>'

  command :scan do |c|
    c.syntax = 'veracodecli scan [app_name] [repo] --opt'
    c.description = 'Submits a scan to Veracode.'
    c.option '--business_unit NAME', String, 'Business Unit Name'
    c.option '--team NAME', String, 'Team Name'
    c.option '--business_criticality', String, 'Application business criticality '
    c.action do |args,options|
      fail 'Specify application Name.' if args.first.nil?
      fail 'Specify repo location.' if args[1].nil?
      # VeracodeApiScan.submit_scan args[0], args[1]
      options.default :business_criticality => 'High'
      options.default :business_unit => 'TELUS Digital'
      `git clone #{args[1]} sast_clone; cd sast_clone; git archive --format=tar -o sast_upload.tar master`
      VeracodeApiMacros.submit_scan_macro args[0], options.business_criticality, options.business_unit, options.team, 'sast_clone/sast_upload.tar'
    end
  end

  command :get_prescan_results do |c|
    c.syntax = 'veracodecli get-prescan-results [app_id]'
    c.description = 'Downloads the prescan results from Veracode.'
    c.action do |args|
      fail 'Specify app_id.' if args.first.nil?
      VeracodeApiResults.get_prescan_results args.first
    end
  end

  command :get_status do |c|
    c.syntax = 'veracodecli get-status [app_id]'
    c.description = 'Gets scan state from Veracode.'
    c.action do |args|
      fail 'Specify app_id.' if args.first.nil?
      VeracodeApiResults.get_build_status args.first
    end
  end

  command :get_report do |c|
    c.syntax = 'veracodecli get-report [app_name]'
    c.description = 'Downloads the final scan report from Veracode.'
    c.action do |args|
      fail 'Specify app_name.' if args.first.nil?
      #VeracodeApiResults.get_scan_report args.first
      VeracodeApiMacros.get_scan_report args.first
    end
  end

end
